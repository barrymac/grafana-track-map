{"version":3,"sources":["../src/map_ctrl.js"],"names":["_","moment","MetricsPanelCtrl","appEvents","MapCtrl","$scope","$injector","timeSrv","get","myMap","coords","data","panel","maxDataPoints","types","dataType","latField","lngField","posField","dataField","dataLabel","linkPanel","showProps","tiles","name","url","maxZoom","tileList","map","item","mapTile","zoom","circle","circleColor","markerColor","events","on","onInitEditMode","bind","render","doMap","minLat","maxLat","minLon","maxLon","k","target","targets","console","log","datapoints","i","length","position","properties","dataPoint","geo","features","geometry","coordinates","latitude","lat","lng","longitude","Math","min","max","_value","push","value","timestamp","remove","points","point","bounds","L","latLngBounds","id","center","getCenter","fitBounds","e","coordsInBox","filter","coord","boxZoomBounds","contains","latLng","minTime","apply","maxTime","isFinite","setTime","from","utc","to","find","layer","tileLayer","addTo","forEach","marker","circleMarker","color","fillColor","fillOpacity","radius","title","customIcon","icon","iconUrl","iconSize","obj","date","merge","html","_toHtml","_findPanelByTarget","ts_range","timeRange","valueOf","dashboard","bindPopup","Array","isArray","indexOf","isMoment","format","r","rows","p","panels","type","addEditorTab","scope","elem","$panelContainer","bgColor","css","templateUrl"],"mappings":"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","file":"map_ctrl.js","sourcesContent":["import './leaflet.js'\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport './css/map-panel.css!';\r\nimport './leaflet.css!';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport appEvents from 'app/core/app_events';\r\n\r\nvar timeSrv;\r\n\r\nexport class MapCtrl extends MetricsPanelCtrl {\r\n    \r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n        timeSrv = $injector.get('timeSrv')\r\n        \r\n        this.myMap = null;\r\n        this.coords = [];\r\n        this.data = null;\r\n\r\n        this.panel.maxDataPoints = 1;\r\n        this.panel.types = ['geoJSON','custom'];\r\n        this.panel.dataType = this.panel.dataType || this.panel.types[0];\r\n        this.panel.latField = this.panel.latField || null;\r\n        this.panel.lngField = this.panel.lngField || null;\r\n        this.panel.posField = this.panel.posField || '';\r\n        this.panel.dataField = this.panel.dataField || '';\r\n        this.panel.dataLabel = this.panel.dataLabel || 'value';\r\n        this.panel.linkPanel = this.panel.linkPanel || false;\r\n        this.panel.showProps = this.panel.showProps || false;\r\n        this.panel.tiles = [\r\n            { name: 'openstreet', url: '//tile.openstreetmap.org/{z}/{x}/{y}.png', maxZoom: 18}, \r\n            { name: 'opentopomap', url: '//{s}.tile.opentopomap.org/{z}/{x}/{y}.png', maxZoom: 17}, \r\n            { name: 'opencyclemap', url: '//{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png'},\r\n            { name: 'opencyclemap_transport', url: '//{s}.tile.thunderforest.com/transport/{z}/{x}/{y}.png'},\r\n            { name: 'opencyclemap_outdoors', url: '//{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png'},\r\n            { name: 'mapquest_aerial', url: '//tileproxy.cloud.mapquest.com/tiles/1.0.0/hyb/{z}/{x}/{y}.png', maxZoom: 18}, \r\n        ];\r\n        this.panel.tileList = this.panel.tiles.map(function(item) {\r\n            return item.name;\r\n        }, []);\r\n        this.panel.mapTile = this.panel.mapTile || this.panel.tileList[0];\r\n        this.panel.zoom = this.panel.zoom || 12;\r\n        this.panel.circle = this.panel.circle || false;\r\n        this.panel.circleColor = this.panel.circleColor || 'red';\r\n        this.panel.markerColor = this.panel.markerColor || 'default';\r\n                \r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        \r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n        \r\n        this.events.on('data-received', (data) => {\r\n            this.data = data;\r\n            this.doMap();\r\n        });\r\n    }\r\n    \r\n    doMap() {\r\n        var data = this.data;\r\n        var panel = this.panel;\r\n        this.coords = [];\r\n        var minLat = 41.1432592728;\r\n        var maxLat = 47.247324252;\r\n        var minLon = 6.098126173;\r\n        var maxLon = 5.4859435558;\r\n        \r\n        for (var k in data) {\r\n            var target = this.panel.targets[k].target;\r\n            console.log(\"data \"+k+\" target: \",target);\r\n            if (data[k].datapoints) {\r\n                for (var i = 0; i < data[k].datapoints.length; i++) {\r\n                    var position, properties;\r\n                    if (this.panel.dataType==\"geoJSON\") {\r\n                        // coordinates field of geoJSON\r\n                        var dataPoint = data[k].datapoints[i][0];\r\n                        if (this.panel.posField) {\r\n                            var geo = _.get(dataPoint, this.panel.posField);    // lodash _.get(object, path, [defaultValue])\r\n                            position = geo.features[0].geometry.coordinates;\r\n                            if (this.panel.showProps) properties = geo.features[0].properties;\r\n                        } else if (dataPoint && dataPoint.features) {\r\n                            position = dataPoint.features[0].geometry.coordinates;\r\n                            if (this.panel.showProps) properties = dataPoint.features[0].properties;\r\n                        } else if (dataPoint && (dataPoint.latitude || dataPoint.lat)) {\r\n                            var lat = dataPoint.latitude || dataPoint.lat;\r\n                            var lng = dataPoint.longitude || dataPoint.lng;\r\n                            position = {lat: lat, lng: lng};\r\n                            properties = {};\r\n                        } else {\r\n                            // nothing\r\n                        }\r\n                        // ???\r\n                        if (position) {\r\n                            position = {lat: position[1], lng: position[0]};\r\n                            minLat = Math.min(minLat, position.lat);\r\n                            minLon = Math.min(minLon, position.lng);\r\n                            maxLat = Math.max(maxLat, position.lat);\r\n                            maxLon = Math.max(maxLon, position.lng);\r\n                        }\r\n                        if (this.panel.dataField) {\r\n                            var _value = _.get(dataPoint, this.panel.dataField);    // lodash _.get(object, path, [defaultValue])\r\n                        } else\r\n                            _value = null;\r\n                        this.coords.push({\r\n                            value: _value,\r\n                            position: position,\r\n                            timestamp: data[k].datapoints[i][1],\r\n                            properties: properties,\r\n                            target: target\r\n                        });\r\n                    } else if (this.panel.dataType==\"custom\") {\r\n                        var dataPoint = data[k].datapoints[i][0];\r\n                        if (this.panel.latField && this.panel.lngField) {\r\n                            var lat = _.get(dataPoint, this.panel.latField);\r\n                            var lng = _.get(dataPoint, this.panel.lngField);\r\n                            position = {lat: lat, lng: lng};\r\n                            properties = {};\r\n                        } else if (dataPoint && (dataPoint.latitude || dataPoint.lat)) {\r\n                            var lat = dataPoint.latitude || dataPoint.lat;\r\n                            var lng = dataPoint.longitude || dataPoint.lng;\r\n                            position = {lat: lat, lng: lng};\r\n                            properties = {};\r\n                        } else {\r\n                            // nothing\r\n                        }\r\n                        if (this.panel.dataField) {\r\n                            var _value = _.get(dataPoint, this.panel.dataField);    // lodash _.get(object, path, [defaultValue])\r\n                        } else\r\n                            _value = null;\r\n                        this.coords.push({\r\n                            value: _value,\r\n                            position: position,\r\n                            timestamp: data[k].datapoints[i][1],\r\n                            properties: properties,\r\n                            target: target\r\n                        });                    \r\n                    }\r\n                }\r\n            } else {\r\n                console.log(\"doMap - no datapoint for \"+k);\r\n            }\r\n        }\r\n\r\n        if (this.myMap) {\r\n            this.myMap.remove();\r\n        }\r\n        var points = this.coords.map(function(point) {\r\n            return point.position;\r\n        }, []);\r\n        var bounds = L.latLngBounds(points);\r\n        var id = \"map_\"+this.panel.id;\r\n        this.myMap = L.map(id, {\r\n            center: bounds.getCenter(),\r\n            zoom: this.panel.zoom\r\n        });\r\n        this.myMap.fitBounds(bounds);\r\n        \r\n        //this.myMap.fitBounds([[minLat, minLon], [maxLat, maxLon]]);\r\n\r\n        this.myMap.on(\"boxzoomend\", function (e) {\r\n            const coordsInBox = this.coords.filter(coord =>\r\n                coord.position && e.boxZoomBounds.contains(L.latLng(coord.position.lat, coord.position.lng))\r\n            );\r\n            const minTime = Math.min.apply(Math, coordsInBox.map(coord => coord.timestamp));\r\n            const maxTime = Math.max.apply(Math, coordsInBox.map(coord => coord.timestamp));\r\n\r\n            if (isFinite(minTime) && isFinite(maxTime)) {\r\n                timeSrv.setTime({\r\n                    from: moment.utc(minTime),\r\n                    to: moment.utc(maxTime),\r\n                });\r\n            }\r\n        });\r\n\r\n        var mapTile = _.find(this.panel.tiles, ['name', this.panel.mapTile]);\r\n        var layer = L.tileLayer(mapTile.url, {\r\n            maxZoom: mapTile.maxZoom,\r\n        });\r\n        layer.addTo(this.myMap);\r\n\r\n        this.coords.forEach(point => {\r\n            //console.log(\"point\", point);\r\n            if (point.position) {\r\n                if (this.panel.circle) {\r\n                    point.marker = L.circleMarker(point.position, {\r\n                        color: this.panel.circleColor,\r\n                        //stroke: 'false',\r\n                        fillColor: 'none',\r\n                        fillOpacity: 0.5,\r\n                        radius: 10,\r\n                        title: point.target\r\n                    });                    \r\n                } else {\r\n                    // marker\r\n                    var marker = this.panel.markerColor=='default' ? \"\" : \"-\"+this.panel.markerColor;\r\n                    var customIcon = L.icon({\r\n                        iconUrl: '/grafana/public/plugins/grafana-map-panel/images/marker-icon'+marker+'.png',\r\n                        iconSize: [25, 41], // size of the icon\r\n                    });\r\n                    point.marker = L.marker(point.position, {\r\n                        icon: customIcon,\r\n                        title: point.target\r\n                    });\r\n                }\r\n                point.marker.addTo(this.myMap);\r\n                var obj = { date: moment(point.timestamp) };\r\n                obj[this.panel.dataLabel] = point.value;\r\n                obj = _.merge(obj, point.properties)\r\n                var html = this._toHtml(obj);\r\n                var panel = point.target ? this._findPanelByTarget(point.target) : null;\r\n                console.log(\"point > panel\", panel);\r\n                if (this.panel.linkPanel && panel) {\r\n                    var ts_range = \"&from=\"+timeSrv.timeRange().from.valueOf()+\"&to=\"+timeSrv.timeRange().to.valueOf();\r\n                    var url = \"/grafana/dashboard-solo/db/\"+this.dashboard.title+\"?panelId=\"+panel.id+\"&theme=light\"+ts_range;\r\n                    html += \"<div class='link-panel'>\";\r\n                    html += \"<hr><b>Data Graph for \"+point.target+\"</b>\";\r\n                    //html += \"<a class='link-panel' href='\"+panel.id+\"'>panel \"+panel.id+\"</>\";\r\n                    html += \"<iframe src='\"+url+\"' class='link-panel'></iframe>\";\r\n                    html += \"</div>\";\r\n                }\r\n                point.marker.bindPopup(html);\r\n            }\r\n        });\r\n    }\r\n    \r\n    _toHtml(obj) {\r\n        var html = \"\";\r\n        for (var k in obj) {\r\n            if (obj[k] && !Array.isArray(obj[k])) {\r\n                html += \"<div class='prop'>\";\r\n                html += \"<b>\"+k+\"</b>: \";\r\n                if (typeof obj[k]=='string' && obj[k].indexOf(\"http\")!=-1) {\r\n                    html += \"<a href='\"+obj[k]+\"' target='_blank'>\"+obj[k]+\"</a>: \";\r\n                } else if(moment.isMoment(obj[k])) {\r\n                    html += obj[k].format('DD/MM/YYYY hh:mm:ss');\r\n                } else {\r\n                    html += obj[k];\r\n                }\r\n                html += \"</div>\";\r\n            }\r\n        }\r\n        return html;\r\n    }\r\n    \r\n    _findPanelByTarget(target) {\r\n        for (var r in this.dashboard.rows) {\r\n            for (var p in this.dashboard.rows[r].panels) {\r\n                var panel = this.dashboard.rows[r].panels[p];\r\n                if (panel.targets[\"0\"].target==target && panel.type==\"graph\") {\r\n                    return panel;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    doMapAndRender() {\r\n        this.doMap();\r\n        this.render();\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/grafana-map-panel/editor.html', 2);\r\n    }\r\n\r\n    addPanel() {\r\n        console.log(\"dashboard\",this.dashboard);\r\n        console.log(\"panel\",this.panel);\r\n        \r\n//        this.dashboard.rows[\"0\"].panels[\"0\"].targets[\"0\"].target\r\n\r\n    }\r\n       \r\n    link(scope, elem) {\r\n        this.events.on('render', () => {\r\n\r\n            const $panelContainer = elem.find('.panel-container');\r\n\r\n            if (this.panel.bgColor) {\r\n                $panelContainer.css('background-color', this.panel.bgColor);\r\n            } else {\r\n                $panelContainer.css('background-color', '');\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nMapCtrl.templateUrl = 'module.html';\r\n"]}