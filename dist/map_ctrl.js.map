{"version":3,"sources":["../src/map_ctrl.js"],"names":["_","moment","MetricsPanelCtrl","appEvents","MapCtrl","$scope","$injector","timeSrv","get","myMap","coords","data","panel","maxDataPoints","types","dataType","latField","lngField","posField","dataField","dataLabel","tiles","name","url","maxZoom","tileList","map","item","mapTile","zoom","circle","markerColor","dashboard","events","on","onInitEditMode","bind","render","doMap","minLat","maxLat","minLon","maxLon","k","datapoints","i","length","position","properties","dataPoint","geo","features","geometry","coordinates","latitude","lat","lng","longitude","Math","min","max","_value","push","value","timestamp","console","log","remove","center","find","point","id","L","e","coordsInBox","filter","coord","boxZoomBounds","contains","latLng","minTime","apply","maxTime","isFinite","setTime","from","utc","to","layer","tileLayer","addTo","forEach","marker","circleMarker","color","fillColor","fillOpacity","radius","obj","date","merge","bindPopup","_toHtml","html","Array","isArray","indexOf","isMoment","format","addEditorTab","scope","elem","$panelContainer","bgColor","css","templateUrl"],"mappings":"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","file":"map_ctrl.js","sourcesContent":["import './leaflet.js'\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport './css/map-panel.css!';\r\nimport './leaflet.css!';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport appEvents from 'app/core/app_events';\r\n\r\nvar timeSrv;\r\n\r\nexport class MapCtrl extends MetricsPanelCtrl {\r\n    \r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n        timeSrv = $injector.get('timeSrv')\r\n        \r\n        this.myMap = null;\r\n        this.coords = [];\r\n        this.data = null;\r\n\r\n        this.panel.maxDataPoints = 1;\r\n        this.panel.types = ['geoJSON','custom'];\r\n        this.panel.dataType = this.panel.dataType || this.panel.types[0];\r\n        this.panel.latField = this.panel.latField || null;\r\n        this.panel.lngField = this.panel.lngField || null;\r\n        this.panel.posField = this.panel.posField || '';\r\n        this.panel.dataField = this.panel.dataField || '';\r\n        this.panel.dataLabel = this.panel.dataLabel || 'value';\r\n        this.panel.tiles = [\r\n            { name: 'openstreet', url: '//tile.openstreetmap.org/{z}/{x}/{y}.png', maxZoom: 18}, \r\n            { name: 'opentopomap', url: '//{s}.tile.opentopomap.org/{z}/{x}/{y}.png', maxZoom: 17}, \r\n            { name: 'opencyclemap', url: '//a.tile3.opencyclemap.org/landscape/{z}/{x}/{y}.png'}\r\n        ];\r\n        this.panel.tileList = this.panel.tiles.map(function(item) {\r\n            return item.name;\r\n        }, []);\r\n        this.panel.mapTile = this.panel.mapTile || this.panel.tileList[0];\r\n        this.panel.zoom = this.panel.zoom || 12;\r\n        this.panel.circle = this.panel.circle || false;\r\n        this.panel.markerColor = this.panel.markerColor || 'red';\r\n        const dashboard = this.dashboard;\r\n        \r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        \r\n//        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\r\n        \r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n        \r\n        this.events.on('data-received', (data) => {\r\n            this.data = data;\r\n            this.doMap();\r\n        });\r\n    }\r\n    \r\n    doMap() {\r\n        var data = this.data;\r\n        var panel = this.panel;\r\n        this.coords = [];\r\n        var minLat = 41.1432592728;\r\n        var maxLat = 47.247324252;\r\n        var minLon = 6.098126173;\r\n        var maxLon = 5.4859435558;\r\n        \r\n        for (var k in data) {\r\n            if (data[k].datapoints) {\r\n                for (var i = 0; i < data[k].datapoints.length; i++) {\r\n                    var position, properties;\r\n                    if (this.panel.dataType==\"geoJSON\") {\r\n                        // coordinates field of geoJSON\r\n                        var dataPoint = data[k].datapoints[i][0];\r\n                        if (this.panel.posField) {\r\n                            var geo = _.get(dataPoint, this.panel.posField);    // lodash _.get(object, path, [defaultValue])\r\n                            position = geo.features[0].geometry.coordinates;\r\n                            properties = geo.features[0].properties;\r\n                        } else if (dataPoint && dataPoint.features) {\r\n                            position = dataPoint.features[0].geometry.coordinates;\r\n                            properties = dataPoint.features[0].properties;\r\n                        } else if (dataPoint && (dataPoint.latitude || dataPoint.lat)) {\r\n                            var lat = dataPoint.latitude || dataPoint.lat;\r\n                            var lng = dataPoint.longitude || dataPoint.lng;\r\n                            position = {lat: lat, lng: lng};\r\n                            properties = {};\r\n                        } else {\r\n                            // nothing\r\n                        }\r\n                        // ???\r\n                        if (position) {\r\n                            position = {lat: position[1], lng: position[0]};\r\n                            minLat = Math.min(minLat, position.lat);\r\n                            minLon = Math.min(minLon, position.lng);\r\n                            maxLat = Math.max(maxLat, position.lat);\r\n                            maxLon = Math.max(maxLon, position.lng);\r\n                        }\r\n                        if (this.panel.dataField) {\r\n                            var _value = _.get(dataPoint, this.panel.dataField);    // lodash _.get(object, path, [defaultValue])\r\n                        } else\r\n                            _value = null;\r\n                        this.coords.push({\r\n                            value: _value,\r\n                            position: position,\r\n                            timestamp: data[k].datapoints[i][1],\r\n                            properties: properties\r\n                        });\r\n                    } else if (this.panel.dataType==\"custom\") {\r\n                        var dataPoint = data[k].datapoints[i][0];\r\n                        if (this.panel.latField && this.panel.lngField) {\r\n                            var lat = _.get(dataPoint, this.panel.latField);\r\n                            var lng = _.get(dataPoint, this.panel.lngField);\r\n                            position = {lat: lat, lng: lng};\r\n                            properties = {};\r\n                        } else if (dataPoint && (dataPoint.latitude || dataPoint.lat)) {\r\n                            var lat = dataPoint.latitude || dataPoint.lat;\r\n                            var lng = dataPoint.longitude || dataPoint.lng;\r\n                            position = {lat: lat, lng: lng};\r\n                            properties = {};\r\n                        } else {\r\n                            // nothing\r\n                        }\r\n                        if (this.panel.dataField) {\r\n                            var _value = _.get(dataPoint, this.panel.dataField);    // lodash _.get(object, path, [defaultValue])\r\n                        } else\r\n                            _value = null;\r\n                        this.coords.push({\r\n                            value: _value,\r\n                            position: position,\r\n                            timestamp: data[k].datapoints[i][1],\r\n                            properties: properties\r\n                        });                    \r\n                    }\r\n                }\r\n            } else {\r\n                console.log(\"doMap - no datapoint for \"+k);\r\n            }\r\n        }\r\n\r\n        if (this.myMap) {\r\n            this.myMap.remove();\r\n        }\r\n        var center = this.coords.find(point => point.position);\r\n        center = center ? center.position : [0, 0];\r\n        var id = \"map_\"+this.panel.id;\r\n        this.myMap = L.map(id, {\r\n            center: center,\r\n            zoom: this.panel.zoom\r\n        });\r\n        \r\n        //this.myMap.fitBounds([[minLat, minLon], [maxLat, maxLon]]);\r\n\r\n        this.myMap.on(\"boxzoomend\", function (e) {\r\n            const coordsInBox = this.coords.filter(coord =>\r\n                coord.position && e.boxZoomBounds.contains(L.latLng(coord.position.lat, coord.position.lng))\r\n            );\r\n            const minTime = Math.min.apply(Math, coordsInBox.map(coord => coord.timestamp));\r\n            const maxTime = Math.max.apply(Math, coordsInBox.map(coord => coord.timestamp));\r\n\r\n            if (isFinite(minTime) && isFinite(maxTime)) {\r\n                timeSrv.setTime({\r\n                    from: moment.utc(minTime),\r\n                    to: moment.utc(maxTime),\r\n                });\r\n            }\r\n        });\r\n\r\n        var mapTile = _.find(this.panel.tiles, ['name', this.panel.mapTile]);\r\n        var layer = L.tileLayer(mapTile.url, {\r\n            maxZoom: mapTile.maxZoom,\r\n        });\r\n        layer.addTo(this.myMap);\r\n\r\n        this.coords.forEach(point => {\r\n            //console.log(\"point\", point);\r\n            if (point.position) {\r\n                if (this.panel.circle) {\r\n                    point.marker = L.circleMarker(point.position, {\r\n                        color: panel.markerColor,\r\n                        //stroke: 'false',\r\n                        fillColor: 'none',\r\n                        fillOpacity: 0.5,\r\n                        radius: 10\r\n                    });                    \r\n                } else {\r\n                    point.marker = L.marker(point.position, {\r\n                    });\r\n                }\r\n                point.marker.addTo(this.myMap);\r\n                var obj = { date: moment(point.timestamp) };\r\n                obj[this.panel.dataLabel] = point.value;\r\n                obj = _.merge(obj, point.properties)\r\n                point.marker.bindPopup(this._toHtml(obj));\r\n            }\r\n        });\r\n    }\r\n    \r\n    _toHtml(obj) {\r\n        var html = \"\";\r\n        for (var k in obj) {\r\n            if (obj[k] && !Array.isArray(obj[k])) {\r\n                html += \"<div class='prop'>\";\r\n                html += \"<b>\"+k+\"</b>: \";\r\n                if (typeof obj[k]=='string' && obj[k].indexOf(\"http\")!=-1) {\r\n                    html += \"<a href='\"+obj[k]+\"' target='_blank'>\"+obj[k]+\"</a>: \";\r\n                } else if(moment.isMoment(obj[k])) {\r\n                    html += obj[k].format('DD/MM/YYYY hh:mm:ss');\r\n                } else {\r\n                    html += obj[k];\r\n                }\r\n                html += \"</div>\";\r\n            }\r\n        }\r\n        return html;\r\n    }\r\n\r\n    doMapAndRender() {\r\n        this.doMap();\r\n        this.render();\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/grafana-map-panel/editor.html', 2);\r\n    }\r\n\r\n//    onPanelTeardown() {\r\n//        this.$timeout.cancel(this.nextTickPromise);\r\n//    }\r\n\r\n    link(scope, elem) {\r\n        this.events.on('render', () => {\r\n\r\n            const $panelContainer = elem.find('.panel-container');\r\n\r\n            if (this.panel.bgColor) {\r\n                $panelContainer.css('background-color', this.panel.bgColor);\r\n            } else {\r\n                $panelContainer.css('background-color', '');\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nMapCtrl.templateUrl = 'module.html';\r\n"]}